#ifndef _OPERATOR_LIB_H
#define _OPERATOR_LIB_H

#include "stenseal/stencil.h"
#include "stenseal/operator.h"
#include "stenseal/metric_operator.h"
#include "stenseal/operator_lib.h"
#include "stenseal/stencil_tensor.h"


namespace stenseal
{
  constexpr Operator<2,2,1,2,1> upwind_operator_2nd_order_kalle()
  {
    const stenseal::Symbol usym;

    constexpr stenseal::Stencil<2> interior((-1.0)*usym[-1] + 1.0*usym[0]);
    constexpr stenseal::Stencil<2> left_boundary((-1.0)*usym[0] + 1.0*usym[1]);
    constexpr stenseal::Stencil<2> right_boundary((-1.0)*usym[-1] + 1.0*usym[0]);

    constexpr stenseal::StencilTensor2D<1,2> left_boundary_block(left_boundary);
    constexpr stenseal::StencilTensor2D<1,2> right_boundary_block(right_boundary);

    return stenseal::Operator<2,2,1,2,1> (interior, left_boundary_block, right_boundary_block);
  }

  constexpr Operator<3,2,2,4,2> upwind_operator_2nd_order()
  {
    const stenseal::Symbol usym;

    constexpr stenseal::Stencil<3> interior((0.5)*usym[-2] + (-2.0)*usym[-1] + (1.5)*usym[0]);
    constexpr stenseal::StencilTensor2D<2,2> left_boundary_block((-1.0)*usym[0] + 1.0*usym[1],
                                                                 (-1.0)*usym[-1] + 1.0*usym[0]);
    constexpr stenseal::StencilTensor2D<2,4> right_boundary_block(0.4*usym[-2] + (-1.6)*usym[-1] + 1.0*usym[0] + 0.2*usym[1],
                                                                  0.0*usym[-3] + 2.0*usym[-2] + (-5.0)*usym[-1] +3.0*usym[0]);
    return stenseal::Operator<3,2,2,4,2>(interior, left_boundary_block, right_boundary_block);
  }

  constexpr Operator<4,4,3,5,3> upwind_operator_3rd_order()
  {
    const stenseal::Symbol usym;

    constexpr stenseal::Stencil<4> interior((1.0/6.0)*usym[-2] + (-1.0)*usym[-1] + (1.0/2.0)*usym[0] + (1.0/3.0)*usym[1]);
    constexpr stenseal::StencilTensor2D<3,4> left_boundary_block((-11.0/9.0)*usym[0] + (13.0/9.0)*usym[1] + (-2.0/9.0)*usym[2] + 0*usym[3],
                                                                 (-17.0/28.0)*usym[-1] + (3.0/14.0)*usym[0] + (11.0/28.0)*usym[1] + 0*usym[2],
                                                                 (4.0/23.0)*usym[-2] + (-1)*usym[-1] + (11.0/23.0)*usym[0] + (8.0/23.0)*usym[1]);
    constexpr stenseal::StencilTensor2D<3,5> right_boundary_block((4.0/23.0)*usym[-2] + (-24.0/23.0)*usym[-1] + (11.0/23.0)*usym[0] + (11.0/23.0)*usym[1] + (-2.0/23.0)*usym[2],
                                                                  0*usym[-3] + (1.0/7.0)*usym[-2] + (-23.0/28.0)*usym[-1] + (3.0/14.0) *usym[0] + (13.0/28.0)*usym[1],
                                                                  0*usym[-4] + 0*usym[-3] + (4.0/9.0)*usym[-2] + (-17.0/9.0)*usym[-1] + (13.0/9.0)*usym[0]);
    return stenseal::Operator<4,4,3,5,3>(interior, left_boundary_block, right_boundary_block);
  }

  constexpr Operator<5,5,4,7,4> upwind_operator_4th_order()
  {
    const stenseal::Symbol usym;

    constexpr stenseal::Stencil<5> interior((-1.0/12.0)*usym[-3] + (1.0/2.0)*usym[-2] + (-3.0/2.0)*usym[-1] + (5.0/6.0)*usym[0] + (1.0/4.0)*usym[1]);
    constexpr stenseal::StencilTensor2D<4,5> left_boundary_block((-69.0/49.0)*usym[0] + (169.0/98.0)*usym[1] + (-11.0/49.0)*usym[2]  + (-9.0/98.0)*usym[3] + 0*usym[4],
                                                                 (-205.0/366.0)*usym[-1] +  (11.0/61.0)*usym[0] + (39.0/122.0)*usym[1] + (11.0/183.0)*usym[2] + 0*usym[3],
                                                                 (29.0/123.0)*usym[-2] + (-99.0/82.0)*usym[-1] + (29.0/41.0)*usym[0] + (65.0/246.0)*usym[1] + 0*usym[2],
                                                                 (-3.0/298.0)*usym[-3] + (43.0/149.0)*usym[-2] + (-389.0/298.0)*usym[-1] + (117.0/149.0)*usym[0] + (36.0/149.0)*usym[1]);

    constexpr stenseal::StencilTensor2D<4,7> right_boundary_block((-12.0/149.0)*usym[-3] + (72.0/149.0)*usym[-2] + (-216.0/149.0)*usym[-1] + (117.0/149.0)*usym[0] + (65.0/298.0)*usym[1] + (11.0/149.0)*usym[2] + (-9.0/298.0)*usym[3],
                                                                  0*usym[-4] + (-4.0/41.0)*usym[-3] + (24.0/41.0)*usym[-2] + (-389.0/246.0)*usym[-1]  + (29.0/41.0)*usym[0]  + (39.0/82.0)*usym[1] + (-11.0/123.0)*usym[2],
                                                                  0*usym[-5] +  0*usym[-4] + (-4.0/61.0)*usym[-3] + (43.0/183.0)*usym[-2] + (-99.0/122.0)*usym[-1] + (11.0/61.0)*usym[0] + (169.0/366.0)*usym[1],
                                                                  0*usym[-6] + 0*usym[-5] + 0*usym[-4] + (-3.0/98.0)*usym[-3] + (29.0/49.0)*usym[-2] + (-205.0/98.0)*usym[-1] + (75.0/49.0)*usym[0]);
    return stenseal::Operator<5,5,4,7,4>(interior, left_boundary_block, right_boundary_block);
  }


  constexpr std::pair<MetricOperator<3,3,2>,Operator<3,2,1,2,1>> compact_operators_2nd_order()
  {
    const stenseal::Symbol sym;


    constexpr stenseal::StencilTensor2D<1,2> d1_boundary((-1.0)*sym[0] + (1.0)*sym[1]);
    constexpr stenseal::StencilTensor2D<1,2> d1_boundary_r((-1.0)*sym[-1] + (1.0)*sym[0]);

    constexpr stenseal::Stencil<3> d1_interior((-0.5)*sym[-1] + (0.0)*sym[0] + (0.5)*sym[1]);


    constexpr stenseal::Operator<3,2,1,2,1> D1 (d1_interior,
                                                d1_boundary,
                                                d1_boundary_r);

    constexpr stenseal::StencilTensor2D<3,3> d2_interior( (0.5)*sym[-1] +  (0.5)*sym[0] +  (0.0)*sym[1],
                                                         (-0.5)*sym[-1] + (-1.0)*sym[0] + (-0.5)*sym[1],
                                                          (0.0)*sym[-1] +  (0.5)*sym[0] +  (0.5)*sym[1]);

    constexpr stenseal::StencilTensor2D<3,3> bdry_row1(  (2.0)*sym[0] + (-1.0)*sym[1] + (0.0)*sym[2],
                                                       (-3.0)*sym[-1] +  (1.0)*sym[0] + (0.0)*sym[1],
                                                        (1.0)*sym[-2] + (0.0)*sym[-1] + (0.0)*sym[0]);

    constexpr stenseal::StencilTensor2D<3,3> bdry_row2(  (0.5)*sym[0] +  (0.5)*sym[1] +  (0.0)*sym[2],
                                                       (-0.5)*sym[-1] + (-1.0)*sym[0] + (-0.5)*sym[1],
                                                        (0.0)*sym[-2] + (0.5)*sym[-1] +  (0.5)*sym[0]);

    constexpr stenseal::StencilTensor3D<2,3,3> d2_boundary(bdry_row1,
                                                           bdry_row2);


    constexpr stenseal::MetricOperator<3,3,2> D2 (d2_interior,
                                                  d2_boundary);
    return std::make_pair(D2,D1);
  }



  constexpr std::pair<MetricOperator<5,8,6>,Operator<5,6,4,6,4>> compact_operators_4th_order()
  {
    const stenseal::Symbol sym;

    constexpr stenseal::Stencil<5> d1_interior((0.083333333333333333333)*sym[-2] + (-0.66666666666666666667)*sym[-1] + (0.0)*sym[0] + (0.66666666666666666667)*sym[1] + (-0.083333333333333333333)*sym[2]);

    constexpr stenseal::StencilTensor2D<4,6> d1_boundary(  (-1.4117647058823529412)*sym[0] +    (1.7352941176470588235)*sym[1] +  (-0.23529411764705882353)*sym[2] + (-0.088235294117647058824)*sym[3] +                      (0.0)*sym[4] +                      (0.0)*sym[5],
                                                                            (-0.5)*sym[-1] +                      (0.0)*sym[0] +                      (0.5)*sym[1] +                      (0.0)*sym[2] +                      (0.0)*sym[3] +                      (0.0)*sym[4],
                                                         (0.093023255813953488372)*sym[-2] + (-0.68604651162790697674)*sym[-1] +                      (0.0)*sym[0] +   (0.68604651162790697674)*sym[1] + (-0.093023255813953488372)*sym[2] +                      (0.0)*sym[3],
                                                         (0.030612244897959183673)*sym[-3] +                     (0.0)*sym[-2] + (-0.60204081632653061224)*sym[-1] +                      (0.0)*sym[0] +   (0.65306122448979591837)*sym[1] + (-0.081632653061224489796)*sym[2]);


    constexpr stenseal::StencilTensor2D<4,6> d1_boundary_r((0.081632653061224489796)*sym[-2] + (-0.65306122448979591837)*sym[-1] +                      (0.0)*sym[0] +  (0.60204081632653061224)*sym[1] +                     (0.0)*sym[2] + (-0.030612244897959183673)*sym[3],
                                                                               (0.0)*sym[-3] + (0.093023255813953488372)*sym[-2] + (-0.68604651162790697674)*sym[-1] +                     (0.0)*sym[0] +  (0.68604651162790697674)*sym[1] + (-0.093023255813953488372)*sym[2],
                                                                               (0.0)*sym[-4] +                     (0.0)*sym[-3] +                     (0.0)*sym[-2] +                   (-0.5)*sym[-1] +                     (0.0)*sym[0] +                      (0.5)*sym[1],
                                                                               (0.0)*sym[-5] +                     (0.0)*sym[-4] + (0.088235294117647058824)*sym[-3] + (0.23529411764705882353)*sym[-2] + (-1.7352941176470588235)*sym[-1] +    (1.4117647058823529412)*sym[0]);



    constexpr stenseal::Operator<5,6,4,6,4> D1 (d1_interior,
                                                d1_boundary,
                                                d1_boundary_r);


    constexpr stenseal::StencilTensor2D<5,5> d2_interior(                  (-0.125)*sym[-2] +  (0.16666666666666666667)*sym[-1] + (-0.125)*sym[0] +                     (0.0)*sym[1] +                      (0.0)*sym[2],
                                                           (0.16666666666666666667)*sym[-2] +                     (0.5)*sym[-1] +    (0.5)*sym[0] +  (0.16666666666666666667)*sym[1] +                      (0.0)*sym[2],
                                                         (-0.041666666666666666667)*sym[-2] + (-0.83333333333333333333)*sym[-1] +  (-0.75)*sym[0] + (-0.83333333333333333333)*sym[1] + (-0.041666666666666666667)*sym[2],
                                                                              (0.0)*sym[-2] +  (0.16666666666666666667)*sym[-1] +    (0.5)*sym[0] +                     (0.5)*sym[1] +   (0.16666666666666666667)*sym[2],
                                                                              (0.0)*sym[-2] +                     (0.0)*sym[-1] + (-0.125)*sym[0] +  (0.16666666666666666667)*sym[1] +                   (-0.125)*sym[2]);

    constexpr stenseal::StencilTensor2D<8,8> bdry_row1(  (3.1833910034602076125)*sym[0] + (-0.86764705882352941176)*sym[1] +    (-0.22101402020039844351)*sym[2] +  (-0.094729924436279752185)*sym[3] +  (0.0)*sym[4] +  (0.0)*sym[5] +  (0.0)*sym[6] + (0.0)*sym[7],
                                                       (-6.0207612456747404844)*sym[-1] +                     (0.0)*sym[0] +     (0.80528667974431728951)*sym[1] +    (0.21547456593042325177)*sym[2] +  (0.0)*sym[3] +  (0.0)*sym[4] +  (0.0)*sym[5] + (0.0)*sym[6],
                                                        (3.9031141868512110727)*sym[-2] + (0.86764705882352941176)*sym[-1] +    (-0.73323330098374228005)*sym[0] +  (-0.037527944690998174701)*sym[1] +  (0.0)*sym[2] +  (0.0)*sym[3] +  (0.0)*sym[4] + (0.0)*sym[5],
                                                       (-1.0657439446366782007)*sym[-3] +                    (0.0)*sym[-2] +    (0.16635532060695503459)*sym[-1] +   (-0.10061137597027683236)*sym[0] +  (0.0)*sym[1] +  (0.0)*sym[2] +  (0.0)*sym[3] + (0.0)*sym[4],
                                                                          (0.0)*sym[-4] +                    (0.0)*sym[-3] +  (-0.013793238590901016175)*sym[-2] +  (0.013793238590901016175)*sym[-1] +  (0.0)*sym[0] +  (0.0)*sym[1] +  (0.0)*sym[2] + (0.0)*sym[3],
                                                                          (0.0)*sym[-5] +                    (0.0)*sym[-4] + (-0.0036014405762304921969)*sym[-3] + (0.0036014405762304921969)*sym[-2] + (0.0)*sym[-1] +  (0.0)*sym[0] +  (0.0)*sym[1] + (0.0)*sym[2],
                                                                          (0.0)*sym[-6] +                    (0.0)*sym[-5] +                       (0.0)*sym[-4] +                      (0.0)*sym[-3] + (0.0)*sym[-2] + (0.0)*sym[-1] +  (0.0)*sym[0] + (0.0)*sym[1],
                                                                          (0.0)*sym[-7] +                    (0.0)*sym[-6] +                       (0.0)*sym[-5] +                      (0.0)*sym[-4] + (0.0)*sym[-3] + (0.0)*sym[-2] + (0.0)*sym[-1] + (0.0)*sym[0]);

    constexpr stenseal::StencilTensor2D<8,8> bdry_row2(  (0.70588235294117647059)*sym[0] +  (0.0)*sym[1] +    (0.23203175518056599867)*sym[2] +    (0.062085891878257547121)*sym[3] +  (0.0)*sym[4] +  (0.0)*sym[5] +  (0.0)*sym[6] + (0.0)*sym[7],
                                                       (-0.86764705882352941176)*sym[-1] +  (0.0)*sym[0] +   (-0.98212691092559187043)*sym[1] +    (-0.15022603025087880459)*sym[2] +  (0.0)*sym[3] +  (0.0)*sym[4] +  (0.0)*sym[5] + (0.0)*sym[6],
                                                        (0.11764705882352941176)*sym[-2] + (0.0)*sym[-1] +    (0.80176054333309586512)*sym[0] +    (0.080592397843374727105)*sym[1] +  (0.0)*sym[2] +  (0.0)*sym[3] +  (0.0)*sym[4] + (0.0)*sym[5],
                                                       (0.044117647058823529412)*sym[-3] + (0.0)*sym[-2] + (-0.082837716251396649294)*sym[-1] +    (0.038720069192573112908)*sym[0] +  (0.0)*sym[1] +  (0.0)*sym[2] +  (0.0)*sym[3] + (0.0)*sym[4],
                                                                           (0.0)*sym[-4] + (0.0)*sym[-3] +  (0.028742670303042969545)*sym[-2] +  (-0.028742670303042969545)*sym[-1] +  (0.0)*sym[0] +  (0.0)*sym[1] +  (0.0)*sym[2] + (0.0)*sym[3],
                                                                           (0.0)*sym[-5] + (0.0)*sym[-4] + (0.0024296583602836253501)*sym[-3] + (-0.0024296583602836253501)*sym[-2] + (0.0)*sym[-1] +  (0.0)*sym[0] +  (0.0)*sym[1] + (0.0)*sym[2],
                                                                           (0.0)*sym[-6] + (0.0)*sym[-5] +                      (0.0)*sym[-4] +                       (0.0)*sym[-3] + (0.0)*sym[-2] + (0.0)*sym[-1] +  (0.0)*sym[0] + (0.0)*sym[1],
                                                                           (0.0)*sym[-7] + (0.0)*sym[-6] +                      (0.0)*sym[-5] +                       (0.0)*sym[-4] + (0.0)*sym[-3] + (0.0)*sym[-2] + (0.0)*sym[-1] + (0.0)*sym[0]);

    constexpr stenseal::StencilTensor2D<8,8> bdry_row3(   (-0.13132694938440492476)*sym[0] +   (0.34302325581395348837)*sym[1] +    (-0.28988293294706090142)*sym[2] +   (-0.014836629296441138835)*sym[3] +                        (0.0)*sym[4] +  (0.0)*sym[5] +  (0.0)*sym[6] + (0.0)*sym[7],
                                                          (0.16142270861833105335)*sym[-1] +                      (0.0)*sym[0] +      (1.1000900478291315359)*sym[1] +     (0.11058026680835136975)*sym[2] +                        (0.0)*sym[3] +  (0.0)*sym[4] +  (0.0)*sym[5] + (0.0)*sym[6],
                                                        (-0.021887824897400820793)*sym[-2] + (-0.34302325581395348837)*sym[-1] +     (-1.5595700657447543475)*sym[0] +    (-0.58658112713572217056)*sym[1] +   (-0.047077261291890134247)*sym[2] +  (0.0)*sym[3] +  (0.0)*sym[4] + (0.0)*sym[5],
                                                       (-0.0082079343365253077975)*sym[-3] +                     (0.0)*sym[-2] +    (0.97699923973008271774)*sym[-1] +        (0.21555830607960929)*sym[0] +     (0.18774341178264715209)*sym[1] +  (0.0)*sym[2] +  (0.0)*sym[3] + (0.0)*sym[4],
                                                                             (0.0)*sym[-4] +                     (0.0)*sym[-3] +     (-0.226233808807124339)*sym[-2] +    (0.27444233686884125854)*sym[-1] +    (-0.14123178387567041823)*sym[0] +  (0.0)*sym[1] +  (0.0)*sym[2] + (0.0)*sym[3],
                                                                             (0.0)*sym[-5] +                     (0.0)*sym[-4] + (-0.0014024800602748130373)*sym[-3] + (0.00083684667536141954686)*sym[-2] + (0.00056563338491339336938)*sym[-1] +  (0.0)*sym[0] +  (0.0)*sym[1] + (0.0)*sym[2],
                                                                             (0.0)*sym[-6] +                     (0.0)*sym[-5] +                       (0.0)*sym[-4] +                       (0.0)*sym[-3] +                       (0.0)*sym[-2] + (0.0)*sym[-1] +  (0.0)*sym[0] + (0.0)*sym[1],
                                                                             (0.0)*sym[-7] +                     (0.0)*sym[-6] +                       (0.0)*sym[-5] +                       (0.0)*sym[-4] +                       (0.0)*sym[-3] + (0.0)*sym[-2] + (0.0)*sym[-1] + (0.0)*sym[0]);

    constexpr stenseal::StencilTensor2D<8,8> bdry_row4(  (-0.043217286914765906363)*sym[0] +  (0.0)*sym[1] +    (0.057715111230984399755)*sym[2] + (-0.034905987581524615308)*sym[3] +                     (0.0)*sym[4] +                      (0.0)*sym[5] +  (0.0)*sym[6] + (0.0)*sym[7],
                                                         (0.053121248499399759904)*sym[-1] +  (0.0)*sym[0] +    (-0.09974337262923270017)*sym[1] +  (0.046622124129832931869)*sym[2] +                     (0.0)*sym[3] +                      (0.0)*sym[4] +  (0.0)*sym[5] + (0.0)*sym[6],
                                                       (-0.0072028811524609843938)*sym[-2] + (0.0)*sym[-1] +     (0.85736667976313381352)*sym[0] +   (0.18916341145761631572)*sym[1] +  (0.16475442258477199061)*sym[2] +                      (0.0)*sym[3] +  (0.0)*sym[4] + (0.0)*sym[5],
                                                       (-0.0027010804321728691477)*sym[-3] + (0.0)*sym[-2] +    (-1.0456888750075230101)*sym[-1] +   (-0.4981631033366003581)*sym[0] + (-0.82079387999921399446)*sym[1] + (-0.040816326530612244898)*sym[2] +  (0.0)*sym[3] + (0.0)*sym[4],
                                                                             (0.0)*sym[-4] + (0.0)*sym[-3] +    (0.23171646141418373775)*sym[-2] +  (0.41687741368864316569)*sym[-1] +  (0.49426326775431599902)*sym[0] +   (0.16326530612244897959)*sym[1] +  (0.0)*sym[2] + (0.0)*sym[3],
                                                                             (0.0)*sym[-5] + (0.0)*sym[-4] + (-0.0013660047715463032065)*sym[-3] + (-0.11959385835796741268)*sym[-2] + (0.16177618966012597764)*sym[-1] +  (-0.12244897959183673469)*sym[0] +  (0.0)*sym[1] + (0.0)*sym[2],
                                                                             (0.0)*sym[-6] + (0.0)*sym[-5] +                       (0.0)*sym[-4] +                     (0.0)*sym[-3] +                    (0.0)*sym[-2] +                     (0.0)*sym[-1] +  (0.0)*sym[0] + (0.0)*sym[1],
                                                                             (0.0)*sym[-7] + (0.0)*sym[-6] +                       (0.0)*sym[-5] +                     (0.0)*sym[-4] +                    (0.0)*sym[-3] +                     (0.0)*sym[-2] + (0.0)*sym[-1] + (0.0)*sym[0]);

    constexpr stenseal::StencilTensor2D<8,8> bdry_row5( (0.0)*sym[0] +  (0.0)*sym[1] +  (-0.0048851053342774432287)*sym[2] + (0.0048851053342774432287)*sym[3] +                     (0.0)*sym[4] +                     (0.0)*sym[5] +                      (0.0)*sym[6] + (0.0)*sym[7],
                                                       (0.0)*sym[-1] +  (0.0)*sym[0] +    (0.035329532247490316732)*sym[1] + (-0.035329532247490316732)*sym[2] +                     (0.0)*sym[3] +                     (0.0)*sym[4] +                      (0.0)*sym[5] + (0.0)*sym[6],
                                                       (0.0)*sym[-2] + (0.0)*sym[-1] +    (-0.20266778705638222036)*sym[0] +   (0.24585459344500362744)*sym[1] + (-0.12652013972195474967)*sym[2] +                     (0.0)*sym[3] +                      (0.0)*sym[4] + (0.0)*sym[5],
                                                       (0.0)*sym[-3] + (0.0)*sym[-2] +    (0.23654388769364589895)*sym[-1] +   (0.42556235980715656497)*sym[0] +    (0.504560419165864249)*sym[1] +  (0.16666666666666666667)*sym[2] +                      (0.0)*sym[3] + (0.0)*sym[4],
                                                       (0.0)*sym[-4] + (0.0)*sym[-3] +  (-0.065310349870052464283)*sym[-2] + (-0.80512923096408328671)*sym[-1] +   (-0.754560419165864249)*sym[0] + (-0.83333333333333333333)*sym[1] + (-0.041666666666666666667)*sym[2] + (0.0)*sym[3],
                                                       (0.0)*sym[-5] + (0.0)*sym[-4] + (0.00098982231957593386912)*sym[-3] +  (0.16415670462513598515)*sym[-2] + (0.50152013972195474967)*sym[-1] +                     (0.5)*sym[0] +   (0.16666666666666666667)*sym[1] + (0.0)*sym[2],
                                                       (0.0)*sym[-6] + (0.0)*sym[-5] +                       (0.0)*sym[-4] +                     (0.0)*sym[-3] +                 (-0.125)*sym[-2] + (0.16666666666666666667)*sym[-1] +                   (-0.125)*sym[0] + (0.0)*sym[1],
                                                       (0.0)*sym[-7] + (0.0)*sym[-6] +                       (0.0)*sym[-5] +                     (0.0)*sym[-4] +                    (0.0)*sym[-3] +                    (0.0)*sym[-2] +                     (0.0)*sym[-1] + (0.0)*sym[0]);

    constexpr stenseal::StencilTensor2D<8,8> bdry_row6( (0.0)*sym[0] +  (0.0)*sym[1] +    (-0.0012755102040816326531)*sym[2] +  (0.0012755102040816326531)*sym[3] +                       (0.0)*sym[4] +     (0.0)*sym[5] +                     (0.0)*sym[6] +                      (0.0)*sym[7],
                                                       (0.0)*sym[-1] +  (0.0)*sym[0] +     (0.0029864550678486228262)*sym[1] + (-0.0029864550678486228262)*sym[2] +                       (0.0)*sym[3] +     (0.0)*sym[4] +                     (0.0)*sym[5] +                      (0.0)*sym[6],
                                                       (0.0)*sym[-2] + (0.0)*sym[-1] +    (-0.0012563883873295200126)*sym[0] + (0.00074967514667793834406)*sym[1] + (0.00050671324065158156007)*sym[2] +     (0.0)*sym[3] +                     (0.0)*sym[4] +                      (0.0)*sym[5],
                                                       (0.0)*sym[-3] + (0.0)*sym[-2] +   (-0.0013944632042868511899)*sym[-1] +   (-0.12208539707375840044)*sym[0] +     (0.1651465269447119355)*sym[1] +  (-0.125)*sym[2] +                     (0.0)*sym[3] +                      (0.0)*sym[4],
                                                       (0.0)*sym[-4] + (0.0)*sym[-3] +   (0.00098982231957593386912)*sym[-2] +   (0.16415670462513598515)*sym[-1] +    (0.50152013972195474967)*sym[0] +     (0.5)*sym[1] +  (0.16666666666666666667)*sym[2] +                      (0.0)*sym[3],
                                                       (0.0)*sym[-5] + (0.0)*sym[-4] + (-0.000049915591726552927996)*sym[-3] + (-0.041110037834288529202)*sym[-2] +  (-0.83384004657398491656)*sym[-1] +   (-0.75)*sym[0] + (-0.83333333333333333333)*sym[1] + (-0.041666666666666666667)*sym[2],
                                                       (0.0)*sym[-6] + (0.0)*sym[-5] +                         (0.0)*sym[-4] +                      (0.0)*sym[-3] +   (0.16666666666666666667)*sym[-2] +    (0.5)*sym[-1] +                     (0.5)*sym[0] +   (0.16666666666666666667)*sym[1],
                                                       (0.0)*sym[-7] + (0.0)*sym[-6] +                         (0.0)*sym[-5] +                      (0.0)*sym[-4] +                      (0.0)*sym[-3] + (-0.125)*sym[-2] + (0.16666666666666666667)*sym[-1] +                   (-0.125)*sym[0]);

    constexpr stenseal::StencilTensor3D<6,8,8> d2_boundary(bdry_row1,
                                                           bdry_row2,
                                                           bdry_row3,
                                                           bdry_row4,
                                                           bdry_row5,
                                                           bdry_row6);


    constexpr stenseal::MetricOperator<5,8,6> D2 (d2_interior,
                                                  d2_boundary);
    return std::make_pair(D2,D1);
  }


  constexpr std::pair<MetricOperator<7,12,9>,Operator<7,9,6,9,6>> compact_operators_6th_order()
  {
    const stenseal::Symbol sym;

    constexpr stenseal::Stencil<7> d1_interior((-0.016666666666666666667)*sym[-3] + (0.15)*sym[-2] + (-0.75)*sym[-1] + (0.0)*sym[0] + (0.75)*sym[1] + (-0.15)*sym[2] + (0.016666666666666666667)*sym[3]);

    constexpr stenseal::StencilTensor2D<6,9> d1_boundary(   (-1.5825335189391164188)*sym[0] +    (2.0333786787006760122)*sym[1] +  (-0.14151285874487307126)*sym[2] +  (-0.45039830657827195637)*sym[3] +   (0.10448806928404152927)*sym[4] +  (0.036577936277543798838)*sym[5] +                     (0.0)*sym[6] +                     (0.0)*sym[7] +                     (0.0)*sym[8],
                                                          (-0.46205919563115838145)*sym[-1] +                      (0.0)*sym[0] +   (0.28725862297825077718)*sym[1] +   (0.25881608737683237109)*sym[2] + (-0.069112065532624278319)*sym[3] + (-0.014903449191300044419)*sym[4] +                     (0.0)*sym[5] +                     (0.0)*sym[6] +                     (0.0)*sym[7],
                                                          (0.071247104721829934704)*sym[-2] + (-0.63645109513790742994)*sym[-1] +                      (0.0)*sym[0] +   (0.60623552360914700898)*sym[1] + (-0.022902190275814859888)*sym[2] + (-0.018129342917256430212)*sym[3] +                     (0.0)*sym[4] +                     (0.0)*sym[5] +                     (0.0)*sym[6],
                                                           (0.11471331379897042879)*sym[-3] + (-0.29008748438681486448)*sym[-2] + (-0.30668119136114846413)*sym[-1] +                      (0.0)*sym[0] +   (0.52026228505048166539)*sym[1] + (-0.051642265516118612823)*sym[2] + (0.013435342414629595074)*sym[3] +                     (0.0)*sym[4] +                     (0.0)*sym[5],
                                                         (-0.036210680656540983335)*sym[-4] +  (0.10540094493378227014)*sym[-3] + (0.015764336127391587183)*sym[-2] + (-0.70790544257598853051)*sym[-1] +                      (0.0)*sym[0] +   (0.76919941396264734923)*sym[1] + (-0.16452964326520248826)*sym[2] + (0.018281071473911387584)*sym[3] +                     (0.0)*sym[4],
                                                         (-0.011398193015049851162)*sym[-5] + (0.020437334208704083238)*sym[-4] + (0.011220896474664954212)*sym[-3] + (0.063183694641875565168)*sym[-2] + (-0.69164902442681364114)*sym[-1] +                      (0.0)*sym[0] +  (0.73970913906075203762)*sym[1] + (-0.14794182781215040752)*sym[2] + (0.016437980868016711947)*sym[3]);


    constexpr stenseal::StencilTensor2D<6,9> d1_boundary_r((-0.016437980868016711947)*sym[-3] +   (0.14794182781215040752)*sym[-2] +  (-0.73970913906075203762)*sym[-1] +                       (0.0)*sym[0] +   (0.69164902442681364114)*sym[1] + (-0.063183694641875565168)*sym[2] + (-0.011220896474664954212)*sym[3] + (-0.020437334208704083238)*sym[4] +  (0.011398193015049851162)*sym[5],
                                                                                (0.0)*sym[-4] + (-0.018281071473911387584)*sym[-3] +   (0.16452964326520248826)*sym[-2] +  (-0.76919941396264734923)*sym[-1] +                      (0.0)*sym[0] +   (0.70790544257598853051)*sym[1] + (-0.015764336127391587183)*sym[2] +  (-0.10540094493378227014)*sym[3] +  (0.036210680656540983335)*sym[4],
                                                                                (0.0)*sym[-5] +                      (0.0)*sym[-4] + (-0.013435342414629595074)*sym[-3] +  (0.051642265516118612823)*sym[-2] + (-0.52026228505048166539)*sym[-1] +                      (0.0)*sym[0] +   (0.30668119136114846413)*sym[1] +   (0.29008748438681486448)*sym[2] +  (-0.11471331379897042879)*sym[3],
                                                                                (0.0)*sym[-6] +                      (0.0)*sym[-5] +                      (0.0)*sym[-4] +  (0.018129342917256430212)*sym[-3] + (0.022902190275814859888)*sym[-2] + (-0.60623552360914700898)*sym[-1] +                      (0.0)*sym[0] +   (0.63645109513790742994)*sym[1] + (-0.071247104721829934704)*sym[2],
                                                                                (0.0)*sym[-7] +                      (0.0)*sym[-6] +                      (0.0)*sym[-5] +  (0.014903449191300044419)*sym[-4] + (0.069112065532624278319)*sym[-3] + (-0.25881608737683237109)*sym[-2] + (-0.28725862297825077718)*sym[-1] +                      (0.0)*sym[0] +   (0.46205919563115838145)*sym[1],
                                                                                (0.0)*sym[-8] +                      (0.0)*sym[-7] +                      (0.0)*sym[-6] + (-0.036577936277543798838)*sym[-5] + (-0.10448806928404152927)*sym[-4] +  (0.45039830657827195637)*sym[-3] +  (0.14151285874487307126)*sym[-2] +  (-2.0333786787006760122)*sym[-1] +    (1.5825335189391164188)*sym[0]);



    constexpr stenseal::Operator<7,9,6,9,6> D1 (d1_interior,
                                                d1_boundary,
                                                d1_boundary_r);

    constexpr stenseal::StencilTensor2D<7,7> d2_interior(  (0.030555555555555555556)*sym[-3] + (-0.025)*sym[-2] + (-0.025)*sym[-1] + (0.030555555555555555556)*sym[0] +    (0.0)*sym[1] +    (0.0)*sym[2] +                       (0.0)*sym[3],
                                                                             (-0.05)*sym[-3] + (-0.175)*sym[-2] +    (0.3)*sym[-1] +                  (-0.175)*sym[0] +  (-0.05)*sym[1] +    (0.0)*sym[2] +                       (0.0)*sym[3],
                                                                             (0.025)*sym[-3] +    (0.3)*sym[-2] +  (0.425)*sym[-1] +                   (0.425)*sym[0] +    (0.3)*sym[1] +  (0.025)*sym[2] +                       (0.0)*sym[3],
                                                         (-0.0055555555555555555556)*sym[-3] + (-0.125)*sym[-2] +  (-0.95)*sym[-1] + (-0.56111111111111111111)*sym[0] +  (-0.95)*sym[1] + (-0.125)*sym[2] + (-0.0055555555555555555556)*sym[3],
                                                                               (0.0)*sym[-3] +  (0.025)*sym[-2] +    (0.3)*sym[-1] +                   (0.425)*sym[0] +  (0.425)*sym[1] +    (0.3)*sym[2] +                     (0.025)*sym[3],
                                                                               (0.0)*sym[-3] +    (0.0)*sym[-2] +  (-0.05)*sym[-1] +                  (-0.175)*sym[0] +    (0.3)*sym[1] + (-0.175)*sym[2] +                     (-0.05)*sym[3],
                                                                               (0.0)*sym[-3] +    (0.0)*sym[-2] +    (0.0)*sym[-1] + (0.030555555555555555556)*sym[0] + (-0.025)*sym[1] + (-0.025)*sym[2] +   (0.030555555555555555556)*sym[3]);


    constexpr stenseal::StencilTensor2D<12,12> bdry_row1(   (4.0894773236804956667)*sym[0] +   (-0.93954131669398222073)*sym[1] +  (-0.010082381466481480629)*sym[2] +   (-0.051666682277037973764)*sym[3] +    (-0.1000256846251584226)*sym[4] +    (-0.10026820801105997342)*sym[5] +   (-0.099654596019137938488)*sym[6] +  (0.0)*sym[7] +  (0.0)*sym[8] +  (0.0)*sym[9] + (0.0)*sym[10] + (0.0)*sym[11],
                                                          (-9.4423782357729788662)*sym[-1] +                       (0.0)*sym[0] +   (0.090066013924271085803)*sym[1] +     (0.13065491172737175279)*sym[2] +    (0.44066641299721638733)*sym[3] +        (0.37847153979342013)*sym[4] +     (0.37799375105917799926)*sym[5] +  (0.0)*sym[6] +  (0.0)*sym[7] +  (0.0)*sym[8] +  (0.0)*sym[9] + (0.0)*sym[10],
                                                            (9.271252271310038485)*sym[-2] +   (0.58410555923689157622)*sym[-1] +                       (0.0)*sym[0] +     (0.13812868924846783082)*sym[1] +    (-0.7698607487096054372)*sym[2] +    (-0.50075382501873911597)*sym[3] +    (-0.50715406685734312041)*sym[4] +  (0.0)*sym[5] +  (0.0)*sym[6] +  (0.0)*sym[7] +  (0.0)*sym[8] +  (0.0)*sym[9],
                                                          (-4.9328598008711733812)*sym[-3] +   (0.52627111377678049465)*sym[-2] + (-0.085790122018625981354)*sym[-1] +                        (0.0)*sym[0] +    (0.60663136664837429756)*sym[1] +     (0.24320745938940395372)*sym[2] +     (0.26015543719886389864)*sym[3] +  (0.0)*sym[4] +  (0.0)*sym[5] +  (0.0)*sym[6] +  (0.0)*sym[7] +  (0.0)*sym[8],
                                                           (0.9566226314407860165)*sym[-4] +  (-0.14053100049500085467)*sym[-3] +  (0.003240954417449304588)*sym[-2] +   (-0.23432525216327843876)*sym[-1] +   (-0.22752568175614358929)*sym[0] +   (-0.039298281618239481478)*sym[1] +   (-0.043657763554051267516)*sym[2] +  (0.0)*sym[3] +  (0.0)*sym[4] +  (0.0)*sym[5] +  (0.0)*sym[6] +  (0.0)*sym[7],
                                                         (0.057885810212832383499)*sym[-5] + (-0.030304355824688984492)*sym[-4] + (0.0025655351433870661013)*sym[-3] +   (0.023259588936325185321)*sym[-2] + (-0.033663714724941592626)*sym[-1] +    (0.041651238961190648925)*sym[0] +    (0.067034109374924280875)*sym[1] +  (0.0)*sym[2] +  (0.0)*sym[3] +  (0.0)*sym[4] +  (0.0)*sym[5] +  (0.0)*sym[6],
                                                                             (0.0)*sym[-6] +                      (0.0)*sym[-5] +                      (0.0)*sym[-4] + (-0.0060512554718483831751)*sym[-3] +   (0.12875905294077169742)*sym[-2] +  (-0.041768597833091042685)*sym[-1] +   (-0.080939199635832257152)*sym[0] +  (0.0)*sym[1] +  (0.0)*sym[2] +  (0.0)*sym[3] +  (0.0)*sym[4] +  (0.0)*sym[5],
                                                                             (0.0)*sym[-7] +                      (0.0)*sym[-6] +                      (0.0)*sym[-5] +                       (0.0)*sym[-4] + (-0.049364058929671875384)*sym[-3] +   (0.020529207677978053657)*sym[-2] +   (0.028834851251693824472)*sym[-1] +  (0.0)*sym[0] +  (0.0)*sym[1] +  (0.0)*sym[2] +  (0.0)*sym[3] +  (0.0)*sym[4],
                                                                             (0.0)*sym[-8] +                      (0.0)*sym[-7] +                      (0.0)*sym[-6] +                       (0.0)*sym[-5] + (0.0043830561591585025223)*sym[-4] + (-0.0017705333408631408311)*sym[-3] + (-0.0026125228182953620344)*sym[-2] + (0.0)*sym[-1] +  (0.0)*sym[0] +  (0.0)*sym[1] +  (0.0)*sym[2] +  (0.0)*sym[3],
                                                                             (0.0)*sym[-9] +                      (0.0)*sym[-8] +                      (0.0)*sym[-7] +                       (0.0)*sym[-6] +                      (0.0)*sym[-5] +                       (0.0)*sym[-4] +                       (0.0)*sym[-3] + (0.0)*sym[-2] + (0.0)*sym[-1] +  (0.0)*sym[0] +  (0.0)*sym[1] +  (0.0)*sym[2],
                                                                            (0.0)*sym[-10] +                      (0.0)*sym[-9] +                      (0.0)*sym[-8] +                       (0.0)*sym[-7] +                      (0.0)*sym[-6] +                       (0.0)*sym[-5] +                       (0.0)*sym[-4] + (0.0)*sym[-3] + (0.0)*sym[-2] + (0.0)*sym[-1] +  (0.0)*sym[0] +  (0.0)*sym[1],
                                                                            (0.0)*sym[-11] +                     (0.0)*sym[-10] +                      (0.0)*sym[-9] +                       (0.0)*sym[-8] +                      (0.0)*sym[-7] +                       (0.0)*sym[-6] +                       (0.0)*sym[-5] + (0.0)*sym[-4] + (0.0)*sym[-3] + (0.0)*sym[-2] + (0.0)*sym[-1] +  (0.0)*sym[0]);

    constexpr stenseal::StencilTensor2D<12,12> bdry_row2(   (0.73122416482035480655)*sym[0] +   (0.0)*sym[1] +    (0.020466345193579889289)*sym[2] +   (0.029689651047480180702)*sym[3] +     (0.10013578408389255757)*sym[4] +   (0.086002797746447870713)*sym[5] +   (0.085894226391521193906)*sym[6] +  (0.0)*sym[7] +  (0.0)*sym[8] +  (0.0)*sym[9] + (0.0)*sym[10] + (0.0)*sym[11],
                                                          (-0.93954131669398228079)*sym[-1] +   (0.0)*sym[0] +    (-0.18282606518231472526)*sym[1] +  (-0.075079307705983025325)*sym[2] +    (-0.47988773913025439072)*sym[3] +   (-0.33672620717559771209)*sym[4] +   (-0.33633754386158356104)*sym[5] +  (0.0)*sym[6] +  (0.0)*sym[7] +  (0.0)*sym[8] +  (0.0)*sym[9] + (0.0)*sym[10],
                                                          (0.065387317683122360157)*sym[-2] +  (0.0)*sym[-1] +                        (0.0)*sym[0] +   (-0.07937402602015779845)*sym[1] +     (0.92808081151906795699)*sym[2] +    (0.47753424913902258312)*sym[3] +    (0.47583467384504273846)*sym[4] +  (0.0)*sym[5] +  (0.0)*sym[6] +  (0.0)*sym[7] +  (0.0)*sym[8] +  (0.0)*sym[9],
                                                           (0.20811067925119161896)*sym[-3] +  (0.0)*sym[-2] +    (0.17414638171246217301)*sym[-1] +                       (0.0)*sym[0] +    (-0.85419720331658928992)*sym[1] +   (-0.28456678610814732682)*sym[2] +    (-0.2776227643716815996)*sym[3] +  (0.0)*sym[4] +  (0.0)*sym[5] +  (0.0)*sym[6] +  (0.0)*sym[7] +  (0.0)*sym[8],
                                                          (-0.04827967324643679121)*sym[-4] +  (0.0)*sym[-3] + (-0.0065788516418158201699)*sym[-2] +   (0.13465224902649547975)*sym[-1] +     (0.35037388134566650328)*sym[0] +   (0.094891017634990656742)*sym[1] +   (0.075339556630815549344)*sym[2] +  (0.0)*sym[3] +  (0.0)*sym[4] +  (0.0)*sym[5] +  (0.0)*sym[6] +  (0.0)*sym[7],
                                                         (-0.016901171814249726138)*sym[-5] +  (0.0)*sym[-4] + (-0.0052078100819115262315)*sym[-3] + (-0.013365849104157254273)*sym[-2] +   (0.066812855570823408278)*sym[-1] +  (-0.087997624710051600272)*sym[0] +   (-0.08008670247706309289)*sym[1] +  (0.0)*sym[2] +  (0.0)*sym[3] +  (0.0)*sym[4] +  (0.0)*sym[5] +  (0.0)*sym[6],
                                                                              (0.0)*sym[-6] +  (0.0)*sym[-5] +                       (0.0)*sym[-4] + (0.0034772827563224244593)*sym[-3] +   (-0.16618919765606233495)*sym[-2] +  (0.077731529081607495837)*sym[-1] +   (0.084980385818132414033)*sym[0] +  (0.0)*sym[1] +  (0.0)*sym[2] +  (0.0)*sym[3] +  (0.0)*sym[4] +  (0.0)*sym[5],
                                                                              (0.0)*sym[-7] +  (0.0)*sym[-6] +                       (0.0)*sym[-5] +                      (0.0)*sym[-4] +      (0.060185417458791193)*sym[-3] + (-0.029441301417520479394)*sym[-2] + (-0.030744116041270708616)*sym[-1] +  (0.0)*sym[0] +  (0.0)*sym[1] +  (0.0)*sym[2] +  (0.0)*sym[3] +  (0.0)*sym[4],
                                                                              (0.0)*sym[-8] +  (0.0)*sym[-7] +                       (0.0)*sym[-6] +                      (0.0)*sym[-5] + (-0.0053146098753355629839)*sym[-4] + (0.0025723258092484753606)*sym[-3] + (0.0027422840660870876233)*sym[-2] + (0.0)*sym[-1] +  (0.0)*sym[0] +  (0.0)*sym[1] +  (0.0)*sym[2] +  (0.0)*sym[3],
                                                                              (0.0)*sym[-9] +  (0.0)*sym[-8] +                       (0.0)*sym[-7] +                      (0.0)*sym[-6] +                       (0.0)*sym[-5] +                      (0.0)*sym[-4] +                      (0.0)*sym[-3] + (0.0)*sym[-2] + (0.0)*sym[-1] +  (0.0)*sym[0] +  (0.0)*sym[1] +  (0.0)*sym[2],
                                                                             (0.0)*sym[-10] +  (0.0)*sym[-9] +                       (0.0)*sym[-8] +                      (0.0)*sym[-7] +                       (0.0)*sym[-6] +                      (0.0)*sym[-5] +                      (0.0)*sym[-4] + (0.0)*sym[-3] + (0.0)*sym[-2] + (0.0)*sym[-1] +  (0.0)*sym[0] +  (0.0)*sym[1],
                                                                             (0.0)*sym[-11] + (0.0)*sym[-10] +                       (0.0)*sym[-9] +                      (0.0)*sym[-8] +                       (0.0)*sym[-7] +                      (0.0)*sym[-6] +                      (0.0)*sym[-5] + (0.0)*sym[-4] + (0.0)*sym[-3] + (0.0)*sym[-2] + (0.0)*sym[-1] +  (0.0)*sym[0]);

    constexpr stenseal::StencilTensor2D<12,12> bdry_row3(  (-0.11275093134966007813)*sym[0] +    (0.29407808107799089354)*sym[1] +  (0.0)*sym[2] +   (0.069543285855858997524)*sym[3] +  (-0.38759975504011083041)*sym[4] +  (-0.25211320389822095883)*sym[5] +   (-0.25533551672946795465)*sym[6] +  (0.0)*sym[7] +  (0.0)*sym[8] +  (0.0)*sym[9] + (0.0)*sym[10] + (0.0)*sym[11],
                                                           (0.14487234366052174706)*sym[-1] +                       (0.0)*sym[0] +  (0.0)*sym[1] +    (-0.1758613379897004118)*sym[2] +    (2.0562587216485731035)*sym[3] +    (1.0580263620263884712)*sym[4] +     (1.0542607777389336808)*sym[5] +  (0.0)*sym[6] +  (0.0)*sym[7] +  (0.0)*sym[8] +  (0.0)*sym[9] + (0.0)*sym[10],
                                                         (-0.010082381466481480322)*sym[-2] +   (-0.1828260651823147303)*sym[-1] +  (0.0)*sym[0] +   (-0.18592103262590254157)*sym[1] +   (-4.4086162640328726478)*sym[2] +   (-1.7065206125528327255)*sym[3] +    (-1.6144807116423621369)*sym[4] +  (0.0)*sym[5] +  (0.0)*sym[6] +  (0.0)*sym[7] +  (0.0)*sym[8] +  (0.0)*sym[9],
                                                         (-0.032089575315316577249)*sym[-3] +   (-0.1647237822502924798)*sym[-2] + (0.0)*sym[-1] +                       (0.0)*sym[0] +    (4.6422417570547870898)*sym[1] +    (1.3952448441107847334)*sym[2] +     (1.1011071572361369196)*sym[3] +  (0.0)*sym[4] +  (0.0)*sym[5] +  (0.0)*sym[6] +  (0.0)*sym[7] +  (0.0)*sym[8],
                                                         (0.0074444724144618214991)*sym[-4] +  (0.043986449795481076527)*sym[-3] + (0.0)*sym[-2] +   (0.31540147879166942201)*sym[-1] +   (-1.9746393219837167024)*sym[0] +   (-0.8609699985899383808)*sym[1] +    (-0.4187799475126738355)*sym[2] +  (0.0)*sym[3] +  (0.0)*sym[4] +  (0.0)*sym[5] +  (0.0)*sym[6] +  (0.0)*sym[7],
                                                         (0.0026060720564745685218)*sym[-5] + (0.0094853165591352566194)*sym[-4] + (0.0)*sym[-3] + (-0.031307375875526626757)*sym[-2] + (-0.51576115288088089598)*sym[-1] +   (0.74249768036697615373)*sym[0] +    (0.35332416652409825986)*sym[1] +  (0.0)*sym[2] +  (0.0)*sym[3] +  (0.0)*sym[4] +  (0.0)*sym[5] +  (0.0)*sym[6],
                                                                              (0.0)*sym[-6] +                      (0.0)*sym[-5] + (0.0)*sym[-4] + (0.0081449818436011398622)*sym[-3] +  (0.85346343295857391202)*sym[-2] + (-0.53037283848748332822)*sym[-1] +   (-0.33123557631469174992)*sym[0] +  (0.0)*sym[1] +  (0.0)*sym[2] +  (0.0)*sym[3] +  (0.0)*sym[4] +  (0.0)*sym[5],
                                                                              (0.0)*sym[-7] +                      (0.0)*sym[-6] + (0.0)*sym[-5] +                      (0.0)*sym[-4] + (-0.29070814135965071375)*sym[-3] +  (0.16888252491516989274)*sym[-2] +   (0.12182561644448082101)*sym[-1] +  (0.0)*sym[0] +  (0.0)*sym[1] +  (0.0)*sym[2] +  (0.0)*sym[3] +  (0.0)*sym[4],
                                                                              (0.0)*sym[-8] +                      (0.0)*sym[-7] + (0.0)*sym[-6] +                      (0.0)*sym[-5] + (0.025360723635297568919)*sym[-4] + (-0.01467475789084367801)*sym[-3] + (-0.010685965744453888144)*sym[-2] + (0.0)*sym[-1] +  (0.0)*sym[0] +  (0.0)*sym[1] +  (0.0)*sym[2] +  (0.0)*sym[3],
                                                                              (0.0)*sym[-9] +                      (0.0)*sym[-8] + (0.0)*sym[-7] +                      (0.0)*sym[-6] +                     (0.0)*sym[-5] +                     (0.0)*sym[-4] +                      (0.0)*sym[-3] + (0.0)*sym[-2] + (0.0)*sym[-1] +  (0.0)*sym[0] +  (0.0)*sym[1] +  (0.0)*sym[2],
                                                                             (0.0)*sym[-10] +                      (0.0)*sym[-9] + (0.0)*sym[-8] +                      (0.0)*sym[-7] +                     (0.0)*sym[-6] +                     (0.0)*sym[-5] +                      (0.0)*sym[-4] + (0.0)*sym[-3] + (0.0)*sym[-2] + (0.0)*sym[-1] +  (0.0)*sym[0] +  (0.0)*sym[1],
                                                                             (0.0)*sym[-11] +                     (0.0)*sym[-10] + (0.0)*sym[-9] +                      (0.0)*sym[-8] +                     (0.0)*sym[-7] +                     (0.0)*sym[-6] +                      (0.0)*sym[-5] + (0.0)*sym[-4] + (0.0)*sym[-3] + (0.0)*sym[-2] + (0.0)*sym[-1] +  (0.0)*sym[0]);

    constexpr stenseal::StencilTensor2D<12,12> bdry_row4(  (-0.18153766415545149245)*sym[0] +    (0.13403758969843771173)*sym[1] +  (-0.021850146957123083029)*sym[2] +  (0.0)*sym[3] +    (0.15450478677707894733)*sym[4] +   (0.061943247120842966305)*sym[5] +   (0.066259779106685824829)*sym[6] +  (0.0)*sym[7] +  (0.0)*sym[8] +  (0.0)*sym[9] + (0.0)*sym[10] + (0.0)*sym[11],
                                                           (0.23325560644192619132)*sym[-1] +                       (0.0)*sym[0] +    (0.19518758010000075428)*sym[1] +  (0.0)*sym[2] +   (-0.95740539311832311437)*sym[3] +   (-0.31894950564631216991)*sym[4] +   (-0.31116647400606559582)*sym[5] +  (0.0)*sym[6] +  (0.0)*sym[7] +  (0.0)*sym[8] +  (0.0)*sym[9] + (0.0)*sym[10],
                                                         (-0.016233408971790117732)*sym[-2] + (-0.083330131308181174235)*sym[-1] +                       (0.0)*sym[0] +  (0.0)*sym[1] +     (2.3484078005925597687)*sym[2] +    (0.70582361865727512822)*sym[3] +    (0.55702584498361022372)*sym[4] +  (0.0)*sym[5] +  (0.0)*sym[6] +  (0.0)*sym[7] +  (0.0)*sym[8] +  (0.0)*sym[9],
                                                         (-0.051666682277037971513)*sym[-3] + (-0.075079307705983023469)*sym[-2] +   (-0.1859210326259025295)*sym[-1] +  (0.0)*sym[0] +    (-2.9741336316076984035)*sym[1] +      (-0.95972708772727565)*sym[2] +   (-0.47661712339167497367)*sym[3] +  (0.0)*sym[4] +  (0.0)*sym[5] +  (0.0)*sym[6] +  (0.0)*sym[7] +  (0.0)*sym[8],
                                                          (0.011986172680028755625)*sym[-4] +  (0.020048545231135463489)*sym[-3] + (0.0070236709985659228126)*sym[-2] + (0.0)*sym[-1] +     (1.1855549767713880438)*sym[0] +     (1.0185396263195149852)*sym[1] +    (0.24653724871591844703)*sym[2] +  (0.0)*sym[3] +  (0.0)*sym[4] +  (0.0)*sym[5] +  (0.0)*sym[6] +  (0.0)*sym[7],
                                                         (0.0041959762823246368538)*sym[-5] + (0.0043233040845910252852)*sym[-4] + (0.0055599284844589354306)*sym[-3] + (0.0)*sym[-2] +    (0.6334111948797049125)*sym[-1] +   (-0.80427165551753467841)*sym[0] +    (-0.1846941478527809933)*sym[1] +  (0.0)*sym[2] +  (0.0)*sym[3] +  (0.0)*sym[4] +  (0.0)*sym[5] +  (0.0)*sym[6],
                                                                              (0.0)*sym[-6] +                      (0.0)*sym[-5] +                      (0.0)*sym[-4] + (0.0)*sym[-3] +  (-0.53988291002896628535)*sym[-2] +   (0.40412816902839322671)*sym[-1] +    (0.14471163594365942354)*sym[0] +  (0.0)*sym[1] +  (0.0)*sym[2] +  (0.0)*sym[3] +  (0.0)*sym[4] +  (0.0)*sym[5],
                                                                              (0.0)*sym[-7] +                      (0.0)*sym[-6] +                      (0.0)*sym[-5] + (0.0)*sym[-4] +   (0.16307085537754743617)*sym[-3] +  (-0.11716332201595455545)*sym[-2] + (-0.045907533361592875134)*sym[-1] +  (0.0)*sym[0] +  (0.0)*sym[1] +  (0.0)*sym[2] +  (0.0)*sym[3] +  (0.0)*sym[4],
                                                                              (0.0)*sym[-8] +                      (0.0)*sym[-7] +                      (0.0)*sym[-6] + (0.0)*sym[-5] + (-0.013527679643291389209)*sym[-4] + (0.0096769097810508242488)*sym[-3] + (0.0038507698622405656594)*sym[-2] + (0.0)*sym[-1] +  (0.0)*sym[0] +  (0.0)*sym[1] +  (0.0)*sym[2] +  (0.0)*sym[3],
                                                                              (0.0)*sym[-9] +                      (0.0)*sym[-8] +                      (0.0)*sym[-7] + (0.0)*sym[-6] +                      (0.0)*sym[-5] +                      (0.0)*sym[-4] +                      (0.0)*sym[-3] + (0.0)*sym[-2] + (0.0)*sym[-1] +  (0.0)*sym[0] +  (0.0)*sym[1] +  (0.0)*sym[2],
                                                                             (0.0)*sym[-10] +                      (0.0)*sym[-9] +                      (0.0)*sym[-8] + (0.0)*sym[-7] +                      (0.0)*sym[-6] +                      (0.0)*sym[-5] +                      (0.0)*sym[-4] + (0.0)*sym[-3] + (0.0)*sym[-2] + (0.0)*sym[-1] +  (0.0)*sym[0] +  (0.0)*sym[1],
                                                                             (0.0)*sym[-11] +                     (0.0)*sym[-10] +                      (0.0)*sym[-9] + (0.0)*sym[-8] +                      (0.0)*sym[-7] +                      (0.0)*sym[-6] +                      (0.0)*sym[-5] + (0.0)*sym[-4] + (0.0)*sym[-3] + (0.0)*sym[-2] + (0.0)*sym[-1] +  (0.0)*sym[0]);

    constexpr stenseal::StencilTensor2D<12,12> bdry_row5(   (0.057304615882576827199)*sym[0] +    (-0.04870147583486775842)*sym[1] +    (0.0011231633069383155598)*sym[2] +   (-0.081206179174218291497)*sym[3] +  (-0.078849765908076776697)*sym[4] +  (-0.013618947462418450748)*sym[5] +   (-0.015129740123124177995)*sym[6] +                         (0.0)*sym[7] +  (0.0)*sym[8] +  (0.0)*sym[9] + (0.0)*sym[10] + (0.0)*sym[11],
                                                            (-0.0736300259882499902)*sym[-1] +                        (0.0)*sym[0] +    (-0.010033228992399828323)*sym[1] +     (0.20535450902060304662)*sym[2] +     (0.5343457454113865309)*sym[3] +    (0.14471572868466964066)*sym[4] +      (0.1148983234487732886)*sym[5] +                         (0.0)*sym[6] +  (0.0)*sym[7] +  (0.0)*sym[8] +  (0.0)*sym[9] + (0.0)*sym[10],
                                                           (0.005124276936804874466)*sym[-2] +   (0.030277330302284930421)*sym[-1] +                         (0.0)*sym[0] +     (0.21710128450024522104)*sym[1] +    (-1.3592096488251506869)*sym[2] +   (-0.59263416685980016513)*sym[3] +    (-0.28826010859638409751)*sym[4] +                         (0.0)*sym[5] +  (0.0)*sym[6] +  (0.0)*sym[7] +  (0.0)*sym[8] +  (0.0)*sym[9],
                                                           (0.016309229247752723471)*sym[-3] +   (0.027279460173582569211)*sym[-2] +   (0.0095569005665392358393)*sym[-1] +                        (0.0)*sym[0] +     (1.6131494529688634066)*sym[1] +     (1.3858966249704915084)*sym[2] +     (0.33545591363935685099)*sym[3] +                         (0.0)*sym[4] +  (0.0)*sym[5] +  (0.0)*sym[6] +  (0.0)*sym[7] +  (0.0)*sym[8],
                                                         (-0.0037835841092629703019)*sym[-4] + (-0.0072844770134640625903)*sym[-3] +  (-0.0003610378255613672169)*sym[-2] +   (-0.36829650315425620874)*sym[-1] +   (-0.77977462676024340942)*sym[0] +     (-2.299480915013683874)*sym[1] +     (-0.2541789067429505611)*sym[2] +   (-0.0066994559609168220689)*sym[3] +  (0.0)*sym[4] +  (0.0)*sym[5] +  (0.0)*sym[6] +  (0.0)*sym[7],
                                                         (-0.0013245119696214591636)*sym[-5] + (-0.0015708376275356805241)*sym[-4] + (-0.00028579705551635562114)*sym[-3] +    (0.03655784082581456261)*sym[-2] +  (-0.11471724469087781716)*sym[-1] +     (1.4790523758796341513)*sym[0] +      (0.3080260031155389609)*sym[1] +     (0.029844669089319186798)*sym[2] +  (0.0)*sym[3] +  (0.0)*sym[4] +  (0.0)*sym[5] +  (0.0)*sym[6],
                                                                               (0.0)*sym[-6] +                       (0.0)*sym[-5] +                        (0.0)*sym[-4] + (-0.0095109520181883129151)*sym[-3] +   (0.26598248910975125192)*sym[-2] +  (-0.19042369270167452717)*sym[-1] +    (-0.17209968041567858187)*sym[0] +    (-0.058477807239412317841)*sym[1] +  (0.0)*sym[2] +  (0.0)*sym[3] +  (0.0)*sym[4] +  (0.0)*sym[5],
                                                                               (0.0)*sym[-7] +                       (0.0)*sym[-6] +                        (0.0)*sym[-5] +                       (0.0)*sym[-4] + (-0.088826199614400438052)*sym[-3] +   (0.09467785906953908607)*sym[-2] +  (-0.029602638053154033965)*sym[-1] +     (0.035938359580622983843)*sym[0] +  (0.0)*sym[1] +  (0.0)*sym[2] +  (0.0)*sym[3] +  (0.0)*sym[4],
                                                                               (0.0)*sym[-8] +                       (0.0)*sym[-7] +                        (0.0)*sym[-6] +                       (0.0)*sym[-5] + (0.0078997983087478293732)*sym[-4] + (-0.008184866566757215291)*sym[-3] + (0.00089083372762241189274)*sym[-2] + (-0.00060576546961302597493)*sym[-1] +  (0.0)*sym[0] +  (0.0)*sym[1] +  (0.0)*sym[2] +  (0.0)*sym[3],
                                                                               (0.0)*sym[-9] +                       (0.0)*sym[-8] +                        (0.0)*sym[-7] +                       (0.0)*sym[-6] +                      (0.0)*sym[-5] +                      (0.0)*sym[-4] +                       (0.0)*sym[-3] +                        (0.0)*sym[-2] + (0.0)*sym[-1] +  (0.0)*sym[0] +  (0.0)*sym[1] +  (0.0)*sym[2],
                                                                              (0.0)*sym[-10] +                       (0.0)*sym[-9] +                        (0.0)*sym[-8] +                       (0.0)*sym[-7] +                      (0.0)*sym[-6] +                      (0.0)*sym[-5] +                       (0.0)*sym[-4] +                        (0.0)*sym[-3] + (0.0)*sym[-2] + (0.0)*sym[-1] +  (0.0)*sym[0] +  (0.0)*sym[1],
                                                                              (0.0)*sym[-11] +                      (0.0)*sym[-10] +                        (0.0)*sym[-9] +                       (0.0)*sym[-8] +                      (0.0)*sym[-7] +                      (0.0)*sym[-6] +                       (0.0)*sym[-5] +                        (0.0)*sym[-4] + (0.0)*sym[-3] + (0.0)*sym[-2] + (0.0)*sym[-1] +  (0.0)*sym[0]);

    constexpr stenseal::StencilTensor2D<12,12> bdry_row6(    (0.018038022501654053615)*sym[0] +   (-0.0094432582053190554859)*sym[1] +   (0.00079945638620328451898)*sym[2] +   (0.0072480109904317813395)*sym[3] +  (-0.010490081100448113005)*sym[4] +  (0.012979104599924457596)*sym[5] +   (0.020888759591295666986)*sym[6] +                       (0.0)*sym[7] +                       (0.0)*sym[8] +  (0.0)*sym[9] + (0.0)*sym[10] + (0.0)*sym[11],
                                                            (-0.02317684265251728957)*sym[-1] +                         (0.0)*sym[0] +   (-0.0071415518497298194812)*sym[1] +   (-0.018328799032926313963)*sym[2] +   (0.091621519368541997174)*sym[3] +  (-0.12067252638545351408)*sym[4] +   (-0.10982415434087794056)*sym[5] +                       (0.0)*sym[6] +                       (0.0)*sym[7] +  (0.0)*sym[8] +  (0.0)*sym[9] + (0.0)*sym[10],
                                                           (0.0016129908780855586088)*sym[-2] +   (0.0058708004821386910562)*sym[-1] +                         (0.0)*sym[0] +   (-0.019377250747369394566)*sym[1] +   (-0.31922295962650809548)*sym[2] +   (0.45955827754500407588)*sym[3] +    (0.21868491939609378381)*sym[4] +                       (0.0)*sym[5] +                       (0.0)*sym[6] +  (0.0)*sym[7] +  (0.0)*sym[8] +  (0.0)*sym[9],
                                                           (0.0051337268320307136594)*sym[-3] +   (0.0052895108763095145095)*sym[-2] +   (0.0068025060496827549536)*sym[-1] +                        (0.0)*sym[0] +    (0.77497102654285030617)*sym[1] +  (-0.98401675804627025447)*sym[2] +   (-0.22597108247369999385)*sym[3] +                       (0.0)*sym[4] +                       (0.0)*sym[5] +  (0.0)*sym[6] +  (0.0)*sym[7] +  (0.0)*sym[8],
                                                          (-0.0011909751814693995379)*sym[-4] +  (-0.0014124663811441012178)*sym[-3] + (-0.00025698310612798032325)*sym[-2] +   (0.032872093352314023616)*sym[-1] +   (-0.10315149613365500397)*sym[0] +     (1.329934883313609074)*sym[1] +    (0.27697093976634099621)*sym[2] +    (0.02683574101237040643)*sym[3] +                       (0.0)*sym[4] +  (0.0)*sym[5] +  (0.0)*sym[6] +  (0.0)*sym[7],
                                                         (-0.00041692237778363896711)*sym[-5] + (-0.00030458677198504886206)*sym[-4] + (-0.00020342748002823908009)*sym[-3] + (-0.0032629491349850878123)*sym[-2] +  (-0.57480795212140375258)*sym[-1] +   (-1.1740289377967119151)*sym[0] +   (-0.79436617045231964174)*sym[1] +   (-0.13199993535150668817)*sym[2] + (-0.0054793269560055706491)*sym[3] +  (0.0)*sym[4] +  (0.0)*sym[5] +  (0.0)*sym[6],
                                                                                (0.0)*sym[-6] +                        (0.0)*sym[-5] +                        (0.0)*sym[-4] + (0.00084889457253499480736)*sym[-3] +   (0.17240891170227321219)*sym[-2] +  (0.65997905609276162237)*sym[-1] +    (0.31256817056553625855)*sym[0] +    (0.30895627388637281326)*sym[1] +   (0.024656971302025067921)*sym[2] +  (0.0)*sym[3] +  (0.0)*sym[4] +  (0.0)*sym[5],
                                                                                (0.0)*sym[-7] +                        (0.0)*sym[-6] +                        (0.0)*sym[-5] +                       (0.0)*sym[-4] +  (-0.03308631981031319358)*sym[-3] +  (-0.2140018591897181364)*sym[-2] +    (0.3297741717474879001)*sym[-1] +   (-0.18131387795555681306)*sym[0] +  (-0.049313942604050135842)*sym[1] +  (0.0)*sym[2] +  (0.0)*sym[3] +  (0.0)*sym[4],
                                                                                (0.0)*sym[-8] +                        (0.0)*sym[-7] +                        (0.0)*sym[-6] +                       (0.0)*sym[-5] + (0.0017573511786627241307)*sym[-4] + (0.030268759866854545716)*sym[-3] + (-0.028725553799857036343)*sym[-2] + (-0.022478201591679732149)*sym[-1] +    (0.03013629825803063857)*sym[0] +  (0.0)*sym[1] +  (0.0)*sym[2] +  (0.0)*sym[3],
                                                                                (0.0)*sym[-9] +                        (0.0)*sym[-8] +                        (0.0)*sym[-7] +                       (0.0)*sym[-6] +                      (0.0)*sym[-5] +                     (0.0)*sym[-4] +                      (0.0)*sym[-3] +                      (0.0)*sym[-2] +                      (0.0)*sym[-1] +  (0.0)*sym[0] +  (0.0)*sym[1] +  (0.0)*sym[2],
                                                                               (0.0)*sym[-10] +                        (0.0)*sym[-9] +                        (0.0)*sym[-8] +                       (0.0)*sym[-7] +                      (0.0)*sym[-6] +                     (0.0)*sym[-5] +                      (0.0)*sym[-4] +                      (0.0)*sym[-3] +                      (0.0)*sym[-2] + (0.0)*sym[-1] +  (0.0)*sym[0] +  (0.0)*sym[1],
                                                                               (0.0)*sym[-11] +                       (0.0)*sym[-10] +                        (0.0)*sym[-9] +                       (0.0)*sym[-8] +                      (0.0)*sym[-7] +                     (0.0)*sym[-6] +                      (0.0)*sym[-5] +                      (0.0)*sym[-4] +                      (0.0)*sym[-3] + (0.0)*sym[-2] + (0.0)*sym[-1] +  (0.0)*sym[0]);

    constexpr stenseal::StencilTensor2D<12,12> bdry_row7(  (0.0)*sym[0] +   (0.0)*sym[1] +  (0.0)*sym[2] +  (-0.0019118885633161708786)*sym[3] +    (0.040681303555291502272)*sym[4] +  (-0.013196749810737491704)*sym[5] + (-0.025572665181237835136)*sym[6] +                      (0.0)*sym[7] +     (0.0)*sym[8] +                       (0.0)*sym[9] + (0.0)*sym[10] + (0.0)*sym[11],
                                                          (0.0)*sym[-1] +   (0.0)*sym[0] +  (0.0)*sym[1] +   (0.0048347914064469079895)*sym[2] +    (-0.23106838326878204048)*sym[3] +    (0.10807741421960079253)*sym[4] +   (0.11815617764273433909)*sym[5] +                      (0.0)*sym[6] +     (0.0)*sym[7] +                       (0.0)*sym[8] +  (0.0)*sym[9] + (0.0)*sym[10],
                                                          (0.0)*sym[-2] +  (0.0)*sym[-1] +  (0.0)*sym[0] +   (0.0051113531893524745756)*sym[1] +     (0.53558781637747543414)*sym[2] +   (-0.33283351044897391269)*sym[3] +  (-0.20786565911785401251)*sym[4] +                      (0.0)*sym[5] +     (0.0)*sym[6] +                       (0.0)*sym[7] +  (0.0)*sym[8] +  (0.0)*sym[9],
                                                          (0.0)*sym[-3] +  (0.0)*sym[-2] + (0.0)*sym[-1] +                        (0.0)*sym[0] +    (-0.66972974880676627851)*sym[1] +    (0.50132473560721280137)*sym[2] +   (0.17951612431066454878)*sym[3] +                      (0.0)*sym[4] +     (0.0)*sym[5] +                       (0.0)*sym[6] +  (0.0)*sym[7] +  (0.0)*sym[8],
                                                          (0.0)*sym[-4] +  (0.0)*sym[-3] + (0.0)*sym[-2] + (-0.0086710380841746922259)*sym[-1] +     (0.24249352624045261706)*sym[0] +   (-0.17360734113554285307)*sym[1] +  (-0.15690152576785881822)*sym[2] + (-0.053313621252876253198)*sym[3] +     (0.0)*sym[4] +                       (0.0)*sym[5] +  (0.0)*sym[6] +  (0.0)*sym[7],
                                                          (0.0)*sym[-5] +  (0.0)*sym[-4] + (0.0)*sym[-3] + (0.00086070442526864137864)*sym[-2] +    (0.17480747086739048535)*sym[-1] +    (0.66916070916479286623)*sym[0] +   (0.31691663053104290881)*sym[1] +   (0.31325448501150499059)*sym[2] +   (0.025)*sym[3] +                       (0.0)*sym[4] +  (0.0)*sym[5] +  (0.0)*sym[6],
                                                          (0.0)*sym[-6] +  (0.0)*sym[-5] + (0.0)*sym[-4] + (-0.0002239223735771599179)*sym[-3] +   (-0.12754377854309567608)*sym[-2] +   (-1.0116994839296080677)*sym[-1] +  (-0.48231775430312817665)*sym[0] +  (-0.96988172751725754139)*sym[1] +  (-0.125)*sym[2] + (-0.0055555555555555555556)*sym[3] +  (0.0)*sym[4] +  (0.0)*sym[5],
                                                          (0.0)*sym[-7] +  (0.0)*sym[-6] + (0.0)*sym[-5] +                       (0.0)*sym[-4] +   (0.037841139730330132507)*sym[-3] +   (0.29975568851348272092)*sym[-2] +  (0.39914868674468212406)*sym[-1] +   (0.43825448501150499059)*sym[0] +     (0.3)*sym[1] +                     (0.025)*sym[2] +  (0.0)*sym[3] +  (0.0)*sym[4],
                                                          (0.0)*sym[-8] +  (0.0)*sym[-7] + (0.0)*sym[-6] +                       (0.0)*sym[-5] + (-0.0030693461522962582101)*sym[-4] + (-0.046981462180226842007)*sym[-3] + (-0.17163557041460064667)*sym[-2] +   (0.2966863787471237246)*sym[-1] +  (-0.175)*sym[0] +                     (-0.05)*sym[1] +  (0.0)*sym[2] +  (0.0)*sym[3],
                                                          (0.0)*sym[-9] +  (0.0)*sym[-8] + (0.0)*sym[-7] +                       (0.0)*sym[-6] +                       (0.0)*sym[-5] +                      (0.0)*sym[-4] + (0.030555555555555555556)*sym[-3] +                  (-0.025)*sym[-2] + (-0.025)*sym[-1] +   (0.030555555555555555556)*sym[0] +  (0.0)*sym[1] +  (0.0)*sym[2],
                                                         (0.0)*sym[-10] +  (0.0)*sym[-9] + (0.0)*sym[-8] +                       (0.0)*sym[-7] +                       (0.0)*sym[-6] +                      (0.0)*sym[-5] +                     (0.0)*sym[-4] +                     (0.0)*sym[-3] +    (0.0)*sym[-2] +                      (0.0)*sym[-1] +  (0.0)*sym[0] +  (0.0)*sym[1],
                                                         (0.0)*sym[-11] + (0.0)*sym[-10] + (0.0)*sym[-9] +                       (0.0)*sym[-8] +                       (0.0)*sym[-7] +                      (0.0)*sym[-6] +                     (0.0)*sym[-5] +                     (0.0)*sym[-4] +    (0.0)*sym[-3] +                      (0.0)*sym[-2] + (0.0)*sym[-1] +  (0.0)*sym[0]);

    constexpr stenseal::StencilTensor2D<12,12> bdry_row8(  (0.0)*sym[0] +   (0.0)*sym[1] +  (0.0)*sym[2] +  (0.0)*sym[3] +  (-0.015596528711367857109)*sym[4] + (0.0064861841573315382956)*sym[5] + (0.0091103445540363196808)*sym[6] +                      (0.0)*sym[7] +     (0.0)*sym[8] +     (0.0)*sym[9] +                      (0.0)*sym[10] + (0.0)*sym[11],
                                                          (0.0)*sym[-1] +   (0.0)*sym[0] +  (0.0)*sym[1] +  (0.0)*sym[2] +    (0.08368141434403456036)*sym[3] + (-0.040934994667670546176)*sym[4] + (-0.042746419676364007245)*sym[5] +                      (0.0)*sym[6] +     (0.0)*sym[7] +     (0.0)*sym[8] +                       (0.0)*sym[9] + (0.0)*sym[10],
                                                          (0.0)*sym[-2] +  (0.0)*sym[-1] +  (0.0)*sym[0] +  (0.0)*sym[1] +   (-0.18243281741342895486)*sym[2] +   (0.10598160301968184704)*sym[3] +  (0.076451214393747107811)*sym[4] +                      (0.0)*sym[5] +     (0.0)*sym[6] +     (0.0)*sym[7] +                       (0.0)*sym[8] +  (0.0)*sym[9],
                                                          (0.0)*sym[-3] +  (0.0)*sym[-2] + (0.0)*sym[-1] +  (0.0)*sym[0] +    (0.20229090601117516446)*sym[1] +  (-0.14534218580636584783)*sym[2] + (-0.056948720204809309686)*sym[3] +                      (0.0)*sym[4] +     (0.0)*sym[5] +     (0.0)*sym[6] +                       (0.0)*sym[7] +  (0.0)*sym[8],
                                                          (0.0)*sym[-4] +  (0.0)*sym[-3] + (0.0)*sym[-2] + (0.0)*sym[-1] +  (-0.080981941477156510478)*sym[0] +  (0.086316839802171224649)*sym[1] + (-0.026988423604709991382)*sym[2] +  (0.032764636390806393951)*sym[3] +     (0.0)*sym[4] +     (0.0)*sym[5] +                       (0.0)*sym[6] +  (0.0)*sym[7],
                                                          (0.0)*sym[-5] +  (0.0)*sym[-4] + (0.0)*sym[-3] + (0.0)*sym[-2] + (-0.033546617916933522963)*sym[-1] +  (-0.21697906098076027992)*sym[0] +   (0.33436200223869716464)*sym[1] +  (-0.18383632334100333261)*sym[2] +   (-0.05)*sym[3] +     (0.0)*sym[4] +                       (0.0)*sym[5] +  (0.0)*sym[6],
                                                          (0.0)*sym[-6] +  (0.0)*sym[-5] + (0.0)*sym[-4] + (0.0)*sym[-3] +  (0.037841139730330132507)*sym[-2] +  (0.29975568851348272092)*sym[-1] +   (0.39914868674468212406)*sym[0] +   (0.43825448501150499059)*sym[1] +     (0.3)*sym[2] +   (0.025)*sym[3] +                       (0.0)*sym[4] +  (0.0)*sym[5],
                                                          (0.0)*sym[-7] +  (0.0)*sym[-6] + (0.0)*sym[-5] + (0.0)*sym[-4] + (-0.012303289427168044232)*sym[-3] + (-0.11836475296458982831)*sym[-2] + (-0.94105118982279434281)*sym[-1] +  (-0.56994743445211448751)*sym[0] +   (-0.95)*sym[1] +  (-0.125)*sym[2] + (-0.0055555555555555555556)*sym[3] +  (0.0)*sym[4],
                                                          (0.0)*sym[-8] +  (0.0)*sym[-7] + (0.0)*sym[-6] + (0.0)*sym[-5] + (0.0010477348605150507439)*sym[-4] + (0.023080678926719163518)*sym[-3] +  (0.29866250537751493077)*sym[-2] +  (0.42720908083525083176)*sym[-1] +   (0.425)*sym[0] +     (0.3)*sym[1] +                     (0.025)*sym[2] +  (0.0)*sym[3],
                                                          (0.0)*sym[-9] +  (0.0)*sym[-8] + (0.0)*sym[-7] + (0.0)*sym[-6] +                      (0.0)*sym[-5] +                     (0.0)*sym[-4] +                   (-0.05)*sym[-3] +                  (-0.175)*sym[-2] +    (0.3)*sym[-1] +  (-0.175)*sym[0] +                     (-0.05)*sym[1] +  (0.0)*sym[2],
                                                         (0.0)*sym[-10] +  (0.0)*sym[-9] + (0.0)*sym[-8] + (0.0)*sym[-7] +                      (0.0)*sym[-6] +                     (0.0)*sym[-5] +                     (0.0)*sym[-4] + (0.030555555555555555556)*sym[-3] + (-0.025)*sym[-2] + (-0.025)*sym[-1] +   (0.030555555555555555556)*sym[0] +  (0.0)*sym[1],
                                                         (0.0)*sym[-11] + (0.0)*sym[-10] + (0.0)*sym[-9] + (0.0)*sym[-8] +                      (0.0)*sym[-7] +                     (0.0)*sym[-6] +                     (0.0)*sym[-5] +                     (0.0)*sym[-4] +    (0.0)*sym[-3] +    (0.0)*sym[-2] +                      (0.0)*sym[-1] +  (0.0)*sym[0]);

    constexpr stenseal::StencilTensor2D<12,12> bdry_row9(  (0.0)*sym[0] +   (0.0)*sym[1] +  (0.0)*sym[2] +  (0.0)*sym[3] +    (0.0013848225351007963178)*sym[4] + (-0.00055939836966298632417)*sym[5] + (-0.00082542416543781010202)*sym[6] +                      (0.0)*sym[7] +                      (0.0)*sym[8] +     (0.0)*sym[9] +    (0.0)*sym[10] +                      (0.0)*sym[11],
                                                          (0.0)*sym[-1] +   (0.0)*sym[0] +  (0.0)*sym[1] +  (0.0)*sym[2] +   (-0.0073893991241210784868)*sym[3] +   (0.0035765451326969831605)*sym[4] +   (0.0038128539914240953262)*sym[5] +                      (0.0)*sym[6] +                      (0.0)*sym[7] +     (0.0)*sym[8] +     (0.0)*sym[9] +                      (0.0)*sym[10],
                                                          (0.0)*sym[-2] +  (0.0)*sym[-1] +  (0.0)*sym[0] +  (0.0)*sym[1] +     (0.015915028188724932717)*sym[2] +  (-0.0092090899634437988625)*sym[3] +  (-0.0067059382252811321201)*sym[4] +                      (0.0)*sym[5] +                      (0.0)*sym[6] +     (0.0)*sym[7] +     (0.0)*sym[8] +                       (0.0)*sym[9],
                                                          (0.0)*sym[-3] +  (0.0)*sym[-2] + (0.0)*sym[-1] +  (0.0)*sym[0] +    (-0.016781211853795961753)*sym[1] +    (0.012004296184410038692)*sym[2] +   (0.0047769156693859239279)*sym[3] +                      (0.0)*sym[4] +                      (0.0)*sym[5] +     (0.0)*sym[6] +     (0.0)*sym[7] +                       (0.0)*sym[8],
                                                          (0.0)*sym[-4] +  (0.0)*sym[-3] + (0.0)*sym[-2] + (0.0)*sym[-1] +    (0.0072021656571766958302)*sym[0] +  (-0.0074620594845308547277)*sym[1] +  (0.00081216403616686787953)*sym[2] + (-0.000552270208812708982)*sym[3] +                      (0.0)*sym[4] +     (0.0)*sym[5] +     (0.0)*sym[6] +                       (0.0)*sym[7],
                                                          (0.0)*sym[-5] +  (0.0)*sym[-4] + (0.0)*sym[-3] + (0.0)*sym[-2] +     (0.00178179951334736064)*sym[-1] +     (0.03068985997518740641)*sym[0] +   (-0.029125184768230047427)*sym[1] +  (-0.02279091916474916546)*sym[2] +  (0.030555555555555555556)*sym[3] +     (0.0)*sym[4] +     (0.0)*sym[5] +                       (0.0)*sym[6],
                                                          (0.0)*sym[-6] +  (0.0)*sym[-5] + (0.0)*sym[-4] + (0.0)*sym[-3] +  (-0.0030693461522962582101)*sym[-2] +  (-0.046981462180226842007)*sym[-1] +    (-0.17163557041460064667)*sym[0] +    (0.2966863787471237246)*sym[1] +                   (-0.175)*sym[2] +   (-0.05)*sym[3] +     (0.0)*sym[4] +                       (0.0)*sym[5],
                                                          (0.0)*sym[-7] +  (0.0)*sym[-6] + (0.0)*sym[-5] + (0.0)*sym[-4] +   (0.0010477348605150507439)*sym[-3] +   (0.023080678926719163518)*sym[-2] +    (0.29866250537751493077)*sym[-1] +   (0.42720908083525083176)*sym[0] +                    (0.425)*sym[1] +     (0.3)*sym[2] +   (0.025)*sym[3] +                       (0.0)*sym[4],
                                                          (0.0)*sym[-8] +  (0.0)*sym[-7] + (0.0)*sym[-6] + (0.0)*sym[-5] + (-0.00009159362465153641727)*sym[-4] +  (-0.005139370221149110185)*sym[-3] +   (-0.12477232150094219598)*sym[-2] + (-0.95055227020881272182)*sym[-1] +  (-0.56111111111111111111)*sym[0] +   (-0.95)*sym[1] +  (-0.125)*sym[2] + (-0.0055555555555555555556)*sym[3],
                                                          (0.0)*sym[-9] +  (0.0)*sym[-8] + (0.0)*sym[-7] + (0.0)*sym[-6] +                        (0.0)*sym[-5] +                       (0.0)*sym[-4] +                     (0.025)*sym[-3] +                     (0.3)*sym[-2] +                   (0.425)*sym[-1] +   (0.425)*sym[0] +     (0.3)*sym[1] +                     (0.025)*sym[2],
                                                         (0.0)*sym[-10] +  (0.0)*sym[-9] + (0.0)*sym[-8] + (0.0)*sym[-7] +                        (0.0)*sym[-6] +                       (0.0)*sym[-5] +                       (0.0)*sym[-4] +                   (-0.05)*sym[-3] +                  (-0.175)*sym[-2] +    (0.3)*sym[-1] +  (-0.175)*sym[0] +                     (-0.05)*sym[1],
                                                         (0.0)*sym[-11] + (0.0)*sym[-10] + (0.0)*sym[-9] + (0.0)*sym[-8] +                        (0.0)*sym[-7] +                       (0.0)*sym[-6] +                       (0.0)*sym[-5] +                     (0.0)*sym[-4] + (0.030555555555555555556)*sym[-3] + (-0.025)*sym[-2] + (-0.025)*sym[-1] +   (0.030555555555555555556)*sym[0]);

    constexpr stenseal::StencilTensor3D<9,12,12> d2_boundary(bdry_row1,
                                                             bdry_row2,
                                                             bdry_row3,
                                                             bdry_row4,
                                                             bdry_row5,
                                                             bdry_row6,
                                                             bdry_row7,
                                                             bdry_row8,
                                                             bdry_row9);



    constexpr stenseal::MetricOperator<7,12,9> D2 (d2_interior,
                                                  d2_boundary);
    return std::make_pair(D2,D1);
  }
}

#endif /* _OPERATOR_LIB_H */
